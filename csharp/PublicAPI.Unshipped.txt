#nullable enable
ParquetSharp.WriterProperties.SortingColumn
ParquetSharp.WriterProperties.SortingColumn.SortingColumn() -> void
ParquetSharp.WriterProperties.SortingColumn.SortingColumn(int columnIndex, bool isDescending = false, bool nullsFirst = false) -> void
ParquetSharp.WriterProperties.SortingColumn.ColumnIndex.get -> int
ParquetSharp.WriterProperties.SortingColumn.IsDescending.get -> bool
ParquetSharp.WriterProperties.SortingColumn.NullsFirst.get -> bool
ParquetSharp.WriterProperties.SortingColumn.Equals(ParquetSharp.WriterProperties.SortingColumn other) -> bool
override ParquetSharp.WriterProperties.SortingColumn.Equals(object? obj) -> bool
override ParquetSharp.WriterProperties.SortingColumn.GetHashCode() -> int
static ParquetSharp.WriterProperties.SortingColumn.operator ==(ParquetSharp.WriterProperties.SortingColumn left, ParquetSharp.WriterProperties.SortingColumn right) -> bool
static ParquetSharp.WriterProperties.SortingColumn.operator !=(ParquetSharp.WriterProperties.SortingColumn left, ParquetSharp.WriterProperties.SortingColumn right) -> bool
ParquetSharp.WriterProperties.SortingColumns() -> ParquetSharp.WriterProperties.SortingColumn[]!
ParquetSharp.WriterPropertiesBuilder.SortingColumns(ParquetSharp.WriterProperties.SortingColumn[]! sortingColumns) -> ParquetSharp.WriterPropertiesBuilder!
ParquetSharp.RowGroupMetaData.SortingColumns() -> ParquetSharp.WriterProperties.SortingColumn[]!
ParquetSharp.LogicalTypeEnum.Geography = 18 -> ParquetSharp.LogicalTypeEnum
ParquetSharp.LogicalTypeEnum.Geometry = 17 -> ParquetSharp.LogicalTypeEnum
ParquetSharp.LogicalTypeEnum.Variant = 19 -> ParquetSharp.LogicalTypeEnum
static ParquetSharp.MemoryPool.JemallocMemoryPool() -> ParquetSharp.MemoryPool!
static ParquetSharp.MemoryPool.MimallocMemoryPool() -> ParquetSharp.MemoryPool!
static ParquetSharp.MemoryPool.SystemMemoryPool() -> ParquetSharp.MemoryPool!
ParquetSharp.WriterProperties.MemoryPool.get -> ParquetSharp.MemoryPool!
ParquetSharp.WriterPropertiesBuilder.MemoryPool(ParquetSharp.MemoryPool! memoryPool) -> ParquetSharp.WriterPropertiesBuilder!
ParquetSharp.IO.BufferOutputStream.BufferOutputStream(ParquetSharp.MemoryPool! memoryPool) -> void
ParquetSharp.IO.ResizableBuffer.ResizableBuffer(long initialSize = 128, ParquetSharp.MemoryPool? memoryPool = null) -> void
ParquetSharp.IO.ResizableBuffer.ResizableBuffer(long initialSize) -> void
*REMOVED*ParquetSharp.IO.ResizableBuffer.ResizableBuffer(long initialSize = 128) -> void
static ParquetSharp.ReaderProperties.WithMemoryPool(ParquetSharp.MemoryPool! memoryPool) -> ParquetSharp.ReaderProperties!
ParquetSharp.ReaderProperties.MemoryPool.get -> ParquetSharp.MemoryPool!
ParquetSharp.ReaderProperties.ThriftStringSizeLimit.get -> int
ParquetSharp.ReaderProperties.SetThriftStringSizeLimit(int size) -> void